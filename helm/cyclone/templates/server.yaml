apiVersion: v1
kind: ConfigMap
metadata:
  name: cyclone-server-config
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "cyclone.name" . }}
    helm.sh/chart: {{ include "cyclone.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  cyclone-server.json: |
    {
      "logging": {
        "level": "debug"
      },
      "cyclone_server_host": "{{ .Values.server.listenAddress }}",
      "cyclone_server_port": {{ .Values.server.listenPort }},
      "webhook_url_prefix": "{{ .Values.server.webhookUrlPrefix }}",
      "default_pvc_config": {
        "size": "{{ .Values.server.pvc.size }}",
        "storage_class": "{{ .Values.server.pvc.storageClass }}"
      },
      "worker_namespace_quota": {
        "limits.cpu": "{{ .Values.server.resourceRequirement.namespace.limits.cpu }}",
        "limits.memory": "{{ .Values.server.resourceRequirement.namespace.limits.memory }}",
        "requests.cpu": "{{ .Values.server.resourceRequirement.namespace.requests.cpu }}",
        "requests.memory": "{{ .Values.server.resourceRequirement.namespace.requests.memory }}"
      },
      "create_builtin_templates": {{ .Values.server.init.templates }},
      "system_namespace": "{{ .Release.Namespace }}",
      "init_default_tenant": {{ .Values.server.init.defaultTenant }},
      "open_control_cluster": {{ .Values.server.openControlCluster }},
      "storage_usage_watcher": {
        "image": "{{ .Values.imageRegistry.registry }}/{{ .Values.imageRegistry.project }}/cyclone-watcher:{{ .Chart.AppVersion }}",
        "report_url": "{{ tpl (tpl .Values.server.storageWatcher.reportUrl .) . }}",
        "interval_seconds": "{{ .Values.server.storageWatcher.intervalSeconds }}",
        "resource_requirements": {
          "limits.cpu": "{{ .Values.server.storageWatcher.resourceRequirements.limits.cpu }}",
          "limits.memory": "{{ .Values.server.storageWatcher.resourceRequirements.limits.memory }}",
          "requests.cpu": "{{ .Values.server.storageWatcher.resourceRequirements.requests.cpu }}",
          "requests.memory": "{{ .Values.server.storageWatcher.resourceRequirements.requests.memory }}"
        }
      },
      "cache_cleaner": {
        "image": "{{ .Values.imageRegistry.registry }}/{{ .Values.imageRegistry.libraryProject }}/{{ .Values.server.cacheCleaner.image }}",
        "resource_requirements": {
          "limits.cpu": "{{ .Values.server.cacheCleaner.resourceRequirements.limits.cpu }}",
          "limits.memory": "{{ .Values.server.cacheCleaner.resourceRequirements.limits.memory }}",
          "requests.cpu": "{{ .Values.server.cacheCleaner.resourceRequirements.requests.cpu }}",
          "requests.memory": "{{ .Values.server.cacheCleaner.resourceRequirements.requests.memory }}"
        }
      },
      "images": {
        "gc": "{{ .Values.imageRegistry.registry }}/{{ .Values.imageRegistry.libraryProject }}/{{ .Values.engine.images.gc }}"
      },
      "client_set": {
        "qps": {{ .Values.server.clientSet.qps }},
        "burst": {{ .Values.server.clientSet.burst }}
      },
      "artifact": {
        "retention_seconds": {{ .Values.server.artifact.retentionSeconds }},
        "available_disk_percentage": {{ .Values.server.artifact.availableDiskPercentage }}
      }
    }

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cyclone-server
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "cyclone.name" . }}
    app.kubernetes.io/component: cyclone-server
    helm.sh/chart: {{ include "cyclone.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cyclone.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: cyclone-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cyclone.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: cyclone-server
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: cyclone-system
      containers:
      - name: server
        image: {{ .Values.imageRegistry.registry }}/{{ .Values.imageRegistry.project }}/cyclone-server:{{ .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: {{ .Values.server.listenPort }}
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi

---

kind: Service
apiVersion: v1
metadata:
  name: cyclone-server
  labels:
    app.kubernetes.io/name: {{ include "cyclone.name" . }}
    helm.sh/chart: {{ include "cyclone.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    app.kubernetes.io/component: cyclone-server
  ports:
  - protocol: TCP
    port: {{ .Values.server.listenPort }}
    nodePort: {{ .Values.server.nodePort }}
    targetPort: {{ .Values.server.listenPort }}
  type: NodePort