apiVersion: v1
kind: ConfigMap
metadata:
  name: workflow-controller-config
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "cyclone.name" . }}
    helm.sh/chart: {{ include "cyclone.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  workflow-controller.json: |
    {
      "images": {
        "git-resolver": "{{ .Values.imageRegistry.registry }}/{{ .Values.imageRegistry.project }}/cyclone-resolver-git:{{ .Chart.AppVersion }}",
        "image-resolver": "{{ .Values.imageRegistry.registry }}/{{ .Values.imageRegistry.project }}/cyclone-resolver-image:{{ .Chart.AppVersion }}",
        "kv-resolver": "{{ .Values.imageRegistry.registry }}/{{ .Values.imageRegistry.project }}/cyclone-resolver-kv:{{ .Chart.AppVersion }}",
        "coordinator": "{{ .Values.imageRegistry.registry }}/{{ .Values.imageRegistry.project }}/cyclone-workflow-coordinator:{{ .Chart.AppVersion }}",
        "gc": "{{ .Values.imageRegistry.registry }}/{{ .Values.imageRegistry.libraryProject }}/{{ .Values.engine.images.gc }}",
        "dind": "{{ .Values.imageRegistry.registry }}/{{ .Values.imageRegistry.libraryProject }}/{{ .Values.engine.images.dind }}"
      },
      "logging": {
        "level": "debug"
      },
      "gc": {
        "enabled": {{ .Values.engine.gc.enabled }},
        "delay_seconds": {{ .Values.engine.gc.delaySeconds }},
        "retry": {{ .Values.engine.gc.retry }}
      },
      "limits": {
        "max_workflowruns": {{ .Values.engine.limits.maxWorkflowRuns }}
      },
      "default_resource_quota": {
        "limits": {
          "cpu": "{{ .Values.engine.resourceRequirement.default.limits.cpu }}",
          "memory": "{{ .Values.engine.resourceRequirement.default.limits.memory }}"
        },
        "requests": {
          "cpu": "{{ .Values.engine.resourceRequirement.default.requests.cpu }}",
          "memory": "{{ .Values.engine.resourceRequirement.default.requests.memory }}"
        }
      },
      "cyclone_server_addr": "{{ tpl .Values.serverAddress . }}",
      "notification_url": "{{ tpl (tpl .Values.engine.notification.url .) . }}",
      "execution_context": {
        "namespace": "{{ .Values.engine.executionContext.namespace }}",
        "pvc": "{{ .Values.engine.executionContext.pvc }}"
      },
      "dind": {
        "insecure_registries": ["{{ .Values.imageRegistry.registry }}"],
        "bip": "{{ .Values.engine.dind.bip }}"
      }
    }

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cyclone-workflow-controller
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "cyclone.name" . }}
    app.kubernetes.io/component: workflow-controller
    helm.sh/chart: {{ include "cyclone.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cyclone.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: cyclone-workflow-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cyclone.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: cyclone-workflow-controller
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: cyclone-system
      containers:
      - name: controller
        image: {{ .Values.imageRegistry.registry }}/{{ .Values.imageRegistry.project }}/cyclone-workflow-controller:{{ .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DEVELOP_MODE
          value: "{{ .Values.engine.developMode }}"
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
