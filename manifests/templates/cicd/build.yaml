- apiVersion: cyclone.dev/v1alpha1
  kind: Stage
  metadata:
    name: build-template
    labels:
      stage.cyclone.dev/template: "true"
      cyclone.dev/builtin: "true"
      cyclone.dev/scene: cicd
      stage.cyclone.dev/template-kind: build
    annotations:
      cyclone.dev/description: >
        Build source code
  spec:
    pod:
      inputs:
        arguments:
        - name: image
        - name: cmd
        - name: output-artifact-path
        resources:
        - name: code
          type: Git
          path: /workspace
      outputs:
        artifacts:
        - name: bin
          path: "{{ output-artifact-path }}"
      spec:
        containers:
        - image: "{{ image }}"
          command:
          - /bin/sh
          - -e
          - -c
          - "{{{ cmd }}}"
- apiVersion: cyclone.dev/v1alpha1
  kind: Stage
  metadata:
    name: golang-build-template
    labels:
      stage.cyclone.dev/template: "true"
      cyclone.dev/builtin: "true"
      cyclone.dev/scene: cicd
      stage.cyclone.dev/template-kind: build
    annotations:
      cyclone.dev/description: >
        Build Golang source code
  spec:
    pod:
      inputs:
        arguments:
        - name: image
          value: golang:1.10-alpine3.8
        - name: cmd
          value: >-
            go build -o /go/bin/app <main-entrypoint-path>
        - name: output-artifact-path
          value: /go/bin/app
        resources:
        - name: code
          type: Git
          path: /go/src
      outputs:
        artifacts:
        - name: bin
          path: "{{ output-artifact-path }}"
      spec:
        containers:
        - image: "{{ image }}"
          command:
          - /bin/sh
          - -e
          - -c
          - "{{{ cmd }}}"
- apiVersion: cyclone.dev/v1alpha1
  kind: Stage
  metadata:
    name: maven-build-template
    labels:
      stage.cyclone.dev/template: "true"
      cyclone.dev/builtin: "true"
      cyclone.dev/scene: cicd
      stage.cyclone.dev/template-kind: build
    annotations:
      cyclone.dev/description: >
        Build Java source code with Maven
  spec:
    pod:
      inputs:
        arguments:
        - name: image
          value: maven:3.5.3-jdk-8-alpine
        - name: cmd
          value: >-
            mvn clean package -Dmaven.test.skip
        - name: output-artifact-path
          value: /workspace/target/<app>.jar
        resources:
        - name: code
          type: Git
          path: /workspace
      outputs:
        artifacts:
        - name: jar
          path: "{{ output-artifact-path }}"
      spec:
        containers:
        - image: "{{ image }}"
          workingDir: /workspace
          command:
          - /bin/sh
          - -e
          - -c
          - "{{{ cmd }}}"
- apiVersion: cyclone.dev/v1alpha1
  kind: Stage
  metadata:
    name: gradle-build-template
    labels:
      stage.cyclone.dev/template: "true"
      cyclone.dev/builtin: "true"
      cyclone.dev/scene: cicd
      stage.cyclone.dev/template-kind: build
    annotations:
      cyclone.dev/description: >
        Build Java source code with Gradle
  spec:
    pod:
      inputs:
        arguments:
        - name: image
          value: gradle:3.4.1
        - name: cmd
          value: >-
            gradle build -x test
        - name: output-artifact-path
          value: /workspace/build/<app>.jar
        resources:
        - name: code
          type: Git
          path: /workspace
      outputs:
        artifacts:
        - name: jar
          path: "{{ output-artifact-path }}"
      spec:
        containers:
        - image: "{{ image }}"
          workingDir: /workspace
          command:
          - /bin/sh
          - -e
          - -c
          - "{{{ cmd }}}"
