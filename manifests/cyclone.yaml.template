apiVersion: v1
kind: Secret
metadata:
  name: cyclone-secrets
type: Opaque
data:
  config.json: __REGISTRY_AUTH__

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: workflow-controller-config
  namespace: default
data:
  workflow-controller.json: |
    {
      "images": {
        "git-resolver": "__REGISTRY__/cyclone-resolver-git:__VERSION__",
        "image-resolver": "__REGISTRY__/cyclone-resolver-image:__VERSION__",
        "kv-resolver": "__REGISTRY__/cyclone-resolver-kv:__VERSION__",
        "coordinator": "__REGISTRY__/cyclone-workflow-coordinator:__VERSION__",
        "gc": "alpine:3.8"
      },
      "logging": {
        "level": "debug"
      },
      "gc": {
        "enabled": true,
        "delay_seconds": 3600,
        "retry": 1
      },
      "limits": {
        "max_workflowruns": 50
      },
      "default_resource_quota": {
        "limits": {
          "cpu": "200m",
          "memory": "256Mi"
        },
        "requests": {
          "cpu": "100m",
          "memory": "128Mi"
        }
      },
      "execution_context": {
        "namespace": "__EXE_NAMESPACE__",
        "pvc": "__PVC__",
        "service_account": "cyclone-coordinator",
      },
      "secret": "cyclone-secrets",
      "cyclone_server_addr": "cyclone-server.default.svc.cluster.local:7099"
    }

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: cyclone-server-config
  namespace: default
data:
  cyclone-server.json: |
    {
      "logging": {
        "level": "debug"
      },
      "cyclone_server_host": "0.0.0.0",
      "cyclone_server_port": 7099,
      "default_pvc_config": {
        "size": "10Gi"
      },
      "worker_namespace_quota": {
        "limits.cpu": "2",
        "limits.memory": "4Gi",
        "requests.cpu": "1",
        "requests.memory": "2Gi"
      }
    }

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cyclone-web
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cyclone-web
  template:
    metadata:
      labels:
        app: cyclone-web
    spec:
      containers:
      - name: web
        image: __REGISTRY__/cyclone-web:__VERSION__
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80

---

kind: Service
apiVersion: v1
metadata:
  name: cyclone-web
spec:
  selector:
    app: cyclone-web
  ports:
  - protocol: TCP
    port: 80
    nodePort: 30022
    targetPort: 80
  type: NodePort

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cyclone-server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cyclone-server
  template:
    metadata:
      labels:
        app: cyclone-server
    spec:
      containers:
      - name: server
        image: __REGISTRY__/cyclone-server:__VERSION__
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 7099

---

kind: Service
apiVersion: v1
metadata:
  name: cyclone-server
spec:
  selector:
    app: cyclone-server
  ports:
  - protocol: TCP
    port: 7099
    nodePort: 30011
    targetPort: 7099
  type: NodePort

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cyclone-workflow-controller
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cyclone-workflow-controller
  template:
    metadata:
      labels:
        app: cyclone-workflow-controller
    spec:
      containers:
      - name: controller
        image: __REGISTRY__/cyclone-workflow-controller:__VERSION__
        imagePullPolicy: IfNotPresent
        env:
        - name: DEVELOP_MODE
          value: "true"
        volumeMounts:
        - mountPath: /etc/localtime
          name: local-timezone
          readOnly: true
      volumes:
      - hostPath:
          path: /etc/localtime
        name: local-timezone

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: cyclone-coordinator
  namespace: __EXE_NAMESPACE__

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cyclone-coordinator
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "watch", "list", "create", "update"]
- apiGroups: ["cyclone.io"]
  resources: ["*"]
  verbs: ["get", "watch", "list"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cyclone-coordinator
subjects:
- kind: ServiceAccount
  name: cyclone-coordinator
  namespace: __EXE_NAMESPACE__
roleRef:
  kind: ClusterRole
  name: cyclone-coordinator
  apiGroup: rbac.authorization.k8s.io
