/*
Copyright 2019 caicloud authors. All rights reserved.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/caicloud/cyclone/pkg/apis/cyclone/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// StageTemplateLister helps list StageTemplates.
type StageTemplateLister interface {
	// List lists all StageTemplates in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.StageTemplate, err error)
	// StageTemplates returns an object that can list and get StageTemplates.
	StageTemplates(namespace string) StageTemplateNamespaceLister
	StageTemplateListerExpansion
}

// stageTemplateLister implements the StageTemplateLister interface.
type stageTemplateLister struct {
	indexer cache.Indexer
}

// NewStageTemplateLister returns a new StageTemplateLister.
func NewStageTemplateLister(indexer cache.Indexer) StageTemplateLister {
	return &stageTemplateLister{indexer: indexer}
}

// List lists all StageTemplates in the indexer.
func (s *stageTemplateLister) List(selector labels.Selector) (ret []*v1alpha1.StageTemplate, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.StageTemplate))
	})
	return ret, err
}

// StageTemplates returns an object that can list and get StageTemplates.
func (s *stageTemplateLister) StageTemplates(namespace string) StageTemplateNamespaceLister {
	return stageTemplateNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// StageTemplateNamespaceLister helps list and get StageTemplates.
type StageTemplateNamespaceLister interface {
	// List lists all StageTemplates in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.StageTemplate, err error)
	// Get retrieves the StageTemplate from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.StageTemplate, error)
	StageTemplateNamespaceListerExpansion
}

// stageTemplateNamespaceLister implements the StageTemplateNamespaceLister
// interface.
type stageTemplateNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all StageTemplates in the indexer for a given namespace.
func (s stageTemplateNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.StageTemplate, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.StageTemplate))
	})
	return ret, err
}

// Get retrieves the StageTemplate from the indexer for a given namespace and name.
func (s stageTemplateNamespaceLister) Get(name string) (*v1alpha1.StageTemplate, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.GroupResource("stagetemplate"), name)
	}
	return obj.(*v1alpha1.StageTemplate), nil
}
