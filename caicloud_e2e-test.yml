integration:
  services:
    mongo:
      image: cargo.caicloud.io/caicloud/mongo:3.0.5
      ports:
        - "27017:27017"
      command: mongod --smallfiles
    zookeeper:
      image: cargo.caicloud.io/caicloud/zookeeper:3.4.6
      ports:
        - "2181:2181"
    kafka:
      image: cargo.caicloud.io/caicloud/kafka:0.10.1.0
      environment:
        - KAFKA_ADVERTISED_HOST_NAME=172.18.0.4
        - KAFKA_ADVERTISED_PORT=9092
        - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      links:
        - zookeeper:zk
      ports:
        - "9092:9092"
    etcd:
      image: cargo.caicloud.io/caicloud/etcd:v3.0.13
      ports:
        - "2379:2379"
        - "2380:2380"
      command: /usr/local/bin/etcd --listen-peer-urls=http://0.0.0.0:2380 --advertise-client-urls=http://0.0.0.0:2379 --listen-client-urls=http://0.0.0.0:2379 --data-dir=/mnt
  image: cargo.caicloud.io/caicloud/golang-docker:1.8-17.03
  volumes:
    # auto mount code to container /root/code dir
    -  /var/run/docker.sock:/var/run/docker.sock
  environment:
    - GOPATH=/go
    - DEBUG=true
    - CLAIR_DISABLE=true
    - REGISTRY_LOCATION=cargo.caicloud.io
    - REGISTRY_USERNAME=caicloudadmin
    - REGISTRY_PASSWORD=caicloudadmin
    - KAFKA_HOST=kafka:9092
    - ETCD_HOST=http://etcd:2379
    - MONGODB_HOST=mongo:27017
    - CYCLONE_SERVER=http://172.18.0.1:7099
    - LOG_SERVER=ws://172.18.0.1:8000/ws
    - ERRORTEMPLATE=/go/src/github.com/caicloud/cyclone/notify/provider/error.html
    - SUCCESSTEMPLATE=/go/src/github.com/caicloud/cyclone/notify/provider/success.html
    - WORKER_IMAGE=cargo.caicloud.io/caicloud/cyclone-worker:latest
    - WORKDIR=/go/src/github.com/caicloud/cyclone
    # in e2e docker version 1.11.2 api version 1.23
    - DOCKER_HOST=unix:///var/run/docker.sock
    - DOCKER_API_VERSION=1.23
  links:
    - mongo
    - kafka
    - etcd
  ports:
    - "7099:7099"
    - "8000:8000"
  commands: # just like shell script
    - set -e
    - mkdir -p $WORKDIR
    - cp ./ -rf $WORKDIR
    - cd $WORKDIR
    # build server
    - echo "==> building server ..."
    - go build -o cyclone-server github.com/caicloud/cyclone/cmd/server
    # build woker image
    - echo "==> building worker ..."
    - go build -o cyclone-worker github.com/caicloud/cyclone/cmd/worker
    - docker -H ${DOCKER_HOST} build -t ${WORKER_IMAGE} -f Dockerfile.worker .
    - echo "==> start server"
    - ./cyclone-server &
    - go test -v ./tests/service 
    - go test -v ./tests/version
    - go test -v ./tests/yaml
